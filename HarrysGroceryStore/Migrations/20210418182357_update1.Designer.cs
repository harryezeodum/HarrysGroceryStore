// <auto-generated />
using HarrysGroceryStore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HarrysGroceryStore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210418182357_update1")]
    partial class update1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HarrysGroceryStore.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "10612 Smith Street",
                            City = "Pasadena",
                            FirstName = "Genesis",
                            LastName = "Howard",
                            PhoneNumber = "281-789-1201",
                            State = "Texas",
                            UserId = 9,
                            ZipCode = "77786"
                        });
                });

            modelBuilder.Entity("HarrysGroceryStore.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HireDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Address = "2314 GrandVille Pkwy",
                            City = "Sugarland",
                            FirstName = "John",
                            HireDate = "11/01/2015",
                            LastName = "Doe",
                            PhoneNumber = "281-216-9087",
                            State = "Texas",
                            UserId = 1,
                            ZipCode = "77201"
                        });
                });

            modelBuilder.Entity("HarrysGroceryStore.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("OrderDetailId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderDetailId = 1,
                            OrderId = 10001,
                            ProductId = 1,
                            Quantity = (short)4,
                            UnitPrice = 25m
                        });
                });

            modelBuilder.Entity("HarrysGroceryStore.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Category = "Snacks",
                            Price = 10m,
                            ProductName = "Doritos Chips",
                            SupplierId = 1
                        });
                });

            modelBuilder.Entity("HarrysGroceryStore.Models.SalesOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("OrderDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderDetailId")
                        .HasColumnType("int");

                    b.Property<decimal>("SalesAmount")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("ShipAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zipcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.ToTable("SalesOrders");

                    b.HasData(
                        new
                        {
                            OrderId = 10001,
                            CustomerId = 1,
                            EmployeeId = 8,
                            OrderDate = "02/21/2021",
                            OrderDetailId = 1,
                            SalesAmount = 50m,
                            ShipAddress = "10612 Smith Street",
                            ShipCity = "Pasadena",
                            ShippedDate = "02/22/2021",
                            State = "Texas",
                            Zipcode = "77786"
                        });
                });

            modelBuilder.Entity("HarrysGroceryStore.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            CompanyName = "Amingo Inc.",
                            ContactEmail = "cameron.harry@amingo.com",
                            ContactName = "Cameron Harry",
                            ContactPhone = "713-520-2103"
                        });
                });

            modelBuilder.Entity("HarrysGroceryStore.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "john.doe@aol.com",
                            PassWord = "John2020!"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "michael.chan@gmail.com",
                            PassWord = "Mike2020!"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "claire4real@aol.com",
                            PassWord = "beauty"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "smithJohnson@outlook.com.com",
                            PassWord = "smitty1989!"
                        },
                        new
                        {
                            UserId = 5,
                            Email = "voke.oluwafemi@aol.com",
                            PassWord = "voke1900!"
                        },
                        new
                        {
                            UserId = 6,
                            Email = "harryporter@aol.com",
                            PassWord = "Porterisgood!"
                        },
                        new
                        {
                            UserId = 7,
                            Email = "israelruiz@yahoo.com",
                            PassWord = "Realsoccer!"
                        },
                        new
                        {
                            UserId = 8,
                            Email = "austin.capstone@outlook.com",
                            PassWord = "capstone!"
                        },
                        new
                        {
                            UserId = 9,
                            Email = "genesishoward@aol.com",
                            PassWord = "baller21!"
                        },
                        new
                        {
                            UserId = 10,
                            Email = "christianwalcot@aol.com",
                            PassWord = "christian2005!"
                        },
                        new
                        {
                            UserId = 11,
                            Email = "ngozi.Offodile@gmail.com",
                            PassWord = "ngozi2021!"
                        },
                        new
                        {
                            UserId = 12,
                            Email = "adaobieze@yahoo.com",
                            PassWord = "ada2020!"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
